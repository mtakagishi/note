gitコマンドの基本
=====================================
:更新: 2023-05-05

gitコマンドの超基本ルーティン
---------------------------------------

.. hint:: 
  1人管理者なら最低限このルーティンで回せる。

1. ``git add .``: 現在位置配下の全ての変更をステージング（コミット候補）へ
2. ``git commit -m "message"``: メッセージをつけてローカルコミット
3. ``git push``: コミット内容をリモート（githubなど）に反映


gitブランチ関連のコマンド集
-----------------------------
:git branch: ローカルブランチの一覧を表示
:git branch -r: リモートブランチの一覧を表示
:git branch -a: 全てのブランチの一覧を表示
:git branch <新ブランチ>: ブランチを作るが切り替えない
:git checkout -b <新ブランチ>: ブランチを作って切り替える
:git checkout <既存ブランチ>: 既存ブランチに切り替える
:git diff <別ブランチ> --name-only: <別ブランチ>から変更のあるファイル名だけを表示
:git rebase <別ブランチ>: <別ブランチ>の最新内容を取り込む
:git remote prune origin --dry-run: ローカルに残ってしまったリモートブランチの残骸を確認する
:git remote prune origin: ローカルに残ってしまったリモートブランチの残骸を削除する
:git branch -d <削除ブランチ>: ローカルブランチを削除
:git branch -D <削除ブランチ>: ローカルブランチを強制削除

ブランチ運用の基本ルーティン（Github）
------------------------------------------
1. ブランチを作成
2. ブランチをチェックアウトして変更作業
3. ローカルで動作確認
4. Githubでプルリク
5. サーバ環境で動作確認
6. 問題なければマージ
7. ブランチを削除して終了

.. hint:: 
  別変更のが先に行われた場合のルーティン例
    1. ``git fetch`` で最新を取り込み
    2. ``git rebase main`` としてmainの差分を先に取り込んで変更作業を継続
    3. conflictしたら修正して ``git rebase –-continue`` 
    4. ``git push -f origin ブランチ``
