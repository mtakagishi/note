**************************************
Pythonインストールと基本情報
**************************************

インストール
===================

pythonのインストール
-----------------------
| `公式ページ <https://www.python.org/>`_ 
| インストーラなどはこちらから

.. hint:: WindowsならMicrosoft StoreからPythonが選択できる。

パッケージ管理
===================
下記種類がある。混在すると管理しにくいのでどれか統一が望ましい。当サイトはpoetryで統一。

* pip

  * python付属のパッケージ管理
  * マシンで共有することになる
  
* poetry
  
  * 仮想環境とパッケージ管理を提供
  * pyproject.tomlでパッケージ管理
  * PEPに準拠
  * pipenvより後発

* pipenv

  * 仮想環境とパッケージ管理を提供
  * pipfileでパッケージ管理する
  * pipfileはscript句がかけるのは便利

* conda系
  
  * Pythonディストリビュータの一角、anaconda系列のパッケージ管理
  * 標準ではコンパイルされてないものも手に入る
  * 商用利用の場合は有償条項あり

poetryのインストール
----------------------------
当サイトはPoetry前提::
  インストールは公式サイトを参照  `⇒公式サイト <https://python-poetry.org/>`_ 

.. hint:: 
  | 各プロジェクトごとに仮想環境を分離する設定
  | poetry config virtualenvs.in-project true


Python公式ドキュメント
===============================

| `公式ドキュメント(日本語) <https://docs.python.org/ja/3/>`_ 
| 基本的にドキュメントは充実してるのでまずは公式ドキュメントから始める

言語リファレンス
------------------------

* `言語リファレンス <https://docs.python.org/ja/3/reference/index.html>`_ 

標準ライブラリ
------------------------

* `標準ライブラリ <https://docs.python.org/ja/3/library/index.html>`_ 

素晴らしい Python フレームワーク・ライブラリ・ソフトウェア・リソースの数々
=============================================================================
* `Awesome Python <https://qiita.com/hatai/items/34c91d4ee0b54bd7cb8b>`_ 
